// let, const

let value = "value1"
console.log(value) // value1

value = "value2" // 재할당 가능
console.log(value) // value2

//let value = "value3" // 재선언 불가능, SyntaxError: Identifier 'value' has already been declared

//const value; // 초기값 없이 선언 불가능, SyntaxError: Missing initializer in const declaration

const value7 = "value1"
console.log(value7) // value1

value7 = "value2" // 재할당 불가능, TypeError: Assignment to constant variable.

//const value = "value2" // 재선언 불가능, SyntaxError: Identifier 'value' has already been declared

// 화살표 함수

// ES5
function func() {
	return true
}

//ES6
const func = () => true
const func = () => {
	return true
}

//() => {}
//parm => {}
//(parm1, parm2, ...parms) -> {}

// 익명 화살표 함수
() => {}
// this : function은 호출을 할 때 this가 정해지지만, 화살표 함수는 선언할 때 this가 정해진다.

// 구조 분해 할당

// 배열의 경우
let [value1, value2] = [1, "new"];
console.log(value1); // 1
console.log(value2); // "new"

let arr = ["value1", "value2", "value3"];
let [a,b,c] = arr;
console.log(a,b,c) // value1 value2 value3

// let [a,b,c] = arr; 은 아래와 동일!
// let a = arr[0];
// let b = arr[1];
// let c = arr[2];

let [a,b,c,d] = arr
console.log(d) // undefined

let [a,b,c,d = 4] = arr
console.log(d) // 4

// 객체의 경우
let user = {name: "nbc", age: 30};
let {name, age} = user;

// let name = user.name;
// let age = user.age;

console.log(name, age) // nbc 30

// 새로운 이름으로 할당
let {name: newName, age: newAge} = user;
console.log(name, age) // ReferenceError: name is not defined
console.log(newName, newAge) //nbc 30

let {name, age, birthDay} = user;
console.log(birthDay) // undefined

let {name, age, birthDay = "today"} = user;
console.log(birthDay) // today


// 전개 구문

// 배열
let arr1 = [1,2,3];

let newArr = [...arr1, 4];
console.log(newArr) // [1,2,3,4]

// 객체
let user1 = {name: "nbc", age: 30};
let user2 = {...user1}

user2.name = "nbc2"

console.log(user1.name) // nbc
console.log(user2.name) // nbc2

// 나머지 매개변수

function func (a, b, ...args) {
	console.log(...args)
}

func(1, 2, 3) // 3
func(1, 2, 3, 4, 5, 6, 7) // 3 4 5 6 7

// 템플릿 리터럴
"string"
'string'
new String("string")

`string text`

`string text 
string text line2`

`string text ${value} text`

// named export vs default export

// default export
// name.js
const Name = () => {
}

export default Name

// other file 
// 아무 이름으로 import 가능
import newName from "name.js"
import NameFromOtherModule from "name.js"

// named export
// 하나의 파일에서 여러 변수/클래스 등을 export 하는 것이 가능

export const Name1 = () => {
}

export const Name2 = () => {
}

// other file
import {Name1, Name2} from "name.js"
import {newName} from "name.js" // x

// 다른 이름으로 바꾸려면 as 사용
import {Name1 as newName, Name2} from "name.js" // x

// default export 처럼 가져오려면 * 사용
import * as NameModule from "name.js"

console.log(NameModule.Name1)
